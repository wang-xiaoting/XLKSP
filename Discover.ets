import router from '@ohos.router';

interface TrendingItem {
  id: number,
  image: Resource,
  title: string,
  plays: string
}

interface Creator {
  id: number,
  avatar: Resource,
  name: string
}

interface RecommendedItem {
  id: number,
  thumbnail: Resource,
  title: string,
  author: string,
  plays: string
}

interface CategoryItem {
  key: string,
  label: string
}

@Entry
@Component
struct Discover {
  @State currentCategory: string = 'recommended'
  @State searchText: string = '' // ÊêúÁ¥¢Ê°ÜÊñáÊú¨

  @State trendingItems: TrendingItem[] = [
    {
      id: 1,
      image: $r('app.media.background1'),
      title: 'ÁÉ≠Èó®Ë°óËàûËßÜÈ¢ë',
      plays: '10.2‰∏á'
    },
    {
      id: 2,
      image: $r('app.media.thumbnail_cover1'),
      title: 'ÁÉ≠Èó®Èü≥‰πêÊ¶úÂçï',
      plays: '5.7‰∏á'
    }
  ]

  @State creators: Creator[] = [
    {
      id: 1,
      avatar: $r('app.media.profile1'),
      name: 'ËàûËπàËææ‰∫∫'
    },
    {
      id: 2,
      avatar: $r('app.media.profile2'),
      name: 'Èü≥‰πêÂà∂‰Ωú‰∫∫'
    },
    {
      id: 3,
      avatar: $r('app.media.cover2'),
      name: 'ÊóÖË°åËææ‰∫∫'
    },
    {
      id: 4,
      avatar: $r('app.media.cover1'),
      name: 'ÁæéÈ£üÂçö‰∏ª'
    }
  ]

  @State recommendedItems: RecommendedItem[] = [
    {
      id: 1,
      thumbnail: $r('app.media.background1'),
      title: 'Á≤æÈÄâËàûËπàÊïôÂ≠¶Ôºö‰ªéÈõ∂ÂºÄÂßãÂ≠¶‰π†Ë°óËàûÂü∫Á°ÄÂä®‰Ωú',
      author: 'ËàûËπàËææ‰∫∫',
      plays: '2.3‰∏á'
    },
    {
      id: 2,
      thumbnail: $r('app.media.thumbnail_cover1'),
      title: 'ËΩªÈü≥‰πêÂêàÈõÜÔºöÂä©‰Ω†ÊîæÊùæÂøÉÊÉÖÔºåÊèêÈ´òÂ∑•‰ΩúÊïàÁéá',
      author: 'Èü≥‰πêÂà∂‰Ωú‰∫∫',
      plays: '1.8‰∏á'
    },
    {
      id: 3,
      thumbnail: $r('app.media.thumbnail_cover2'),
      title: 'ÂüéÂ∏ÇÊó•ËêΩÊó∂ÂàÜÔºöÊçïÊçâÁæé‰∏ΩÂÖâÂΩ±ÁöÑÊëÑÂΩ±ÊäÄÂ∑ß',
      author: 'ÊëÑÂΩ±Â∏àÂ∞èÁéã',
      plays: '1.5‰∏á'
    },
    {
      id: 4,
      thumbnail: $r('app.media.profile2'),
      title: 'ÂÆ∂Â∏∏ËèúÊïôÁ®ãÔºöÁÆÄÂçïÊòìÂ≠¶ÁöÑÂø´ÊâãËèúÂà∂‰ΩúÊñπÊ≥ï',
      author: 'ÁæéÈ£üÂçö‰∏ª',
      plays: '3.2‰∏á'
    }
  ]

  private categories: CategoryItem[] = [
    { key: 'recommended', label: 'Êé®Ëçê' },
    { key: 'hot', label: 'ÁÉ≠Èó®' },
    { key: 'music', label: 'Èü≥‰πê' },
    { key: 'dance', label: 'ËàûËπà' },
    { key: 'game', label: 'Ê∏∏Êàè' },
    { key: 'food', label: 'ÁæéÈ£ü' },
    { key: 'travel', label: 'ÊóÖË°å' }
  ]

  @Builder Header() {
    Row() {
      Button() {
        Text('‚Üê')
          .fontSize(20)
          .fontColor('#FFFFFF')
      }
      .backgroundColor('transparent')
      .onClick(() => {
        router.back()
      })

      Text('ÂèëÁé∞')
        .fontSize(18)
        .fontWeight(FontWeight.Bold)
        .fontColor('#FFFFFF')
    }
    .width('100%')
    .justifyContent(FlexAlign.SpaceBetween)
    .alignItems(VerticalAlign.Center)
    .padding(20)
    .borderColor('rgba(255, 255, 255, 0.1)')
    .borderWidth({ bottom: 1 })
  }

  @Builder SearchBar() {
    Row() {
      Text('üîç')
        .fontSize(16)
        .opacity(0.7)
        .margin({ right: 10 })

      TextInput({ placeholder: 'ÊêúÁ¥¢Èü≥‰πê„ÄÅËßÜÈ¢ëÊàñÂàõ‰ΩúËÄÖ' })
        .backgroundColor('transparent')
        .placeholderColor('rgba(255, 255, 255, 0.7)')
        .fontSize(14)
        .fontColor('#FFFFFF')
        .width('100%')
        .onChange((value: string) => {
          this.searchText = value
        })
    }
    .width('100%')
    .padding({ left: 15, right: 15, top: 10, bottom: 10 })
    .margin(15)
    .borderRadius(20)
    .backgroundColor('rgba(255, 255, 255, 0.1)')
  }

  @Builder CategoryTabs() {
    Scroll() {
      Row({ space: 15 }) {
        ForEach(this.categories, (item: CategoryItem) => {
          Text(item.label)
            .fontSize(14)
            .fontColor('#FFFFFF')
            .backgroundColor(this.currentCategory === item.key ? '#FF0050' : 'rgba(255, 255, 255, 0.1)')
            .borderRadius(20)
            .padding({ left: 16, right: 16, top: 8, bottom: 8 })
            .onClick(() => {
              this.currentCategory = item.key
            })
        })
      }
    }
    .scrollable(ScrollDirection.Horizontal)
    .width('100%')
    .padding({ left: 15, right: 15, top: 10, bottom: 10 })
  }

  @Builder TrendingSection() {
    Column() {
      Row() {
        Text('Ê≠£Âú®ÊµÅË°å')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#FFFFFF')

        Text('Êü•ÁúãÂÖ®ÈÉ®')
          .fontSize(14)
          .fontColor('#FFFFFF')
          .opacity(0.8)
          .onClick(() => {
            router.pushUrl({ url: 'pages/TrendingAll' })
          })
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .margin({ bottom: 15 })

      Grid() {
        ForEach(this.trendingItems, (item: TrendingItem) => {
          GridItem() {
            Stack() {
              Image(item.image)
                .width('100%')
                .height('100%')
                .objectFit(ImageFit.Cover)
                .opacity(0.8)

              Column() {
                Text(item.title)
                  .fontSize(16)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#FFFFFF')
                Text(item.plays + 'Ê¨°Êí≠Êîæ')
                  .fontSize(12)
                  .fontColor('#FFFFFF')
                  .opacity(0.8)
              }
              .width('100%')
              .padding(15)
              .alignItems(HorizontalAlign.Start)
              .justifyContent(FlexAlign.End)
              .backgroundImage($r('app.media.gradient'))
              .backgroundImageSize(ImageSize.Cover)
            }
            .width('100%')
            .height(180)
            .borderRadius(12)
          }
        })
      }
      .columnsTemplate('1fr 1fr') // ÂèåÂàóÂ∏ÉÂ±Ä
      .columnsGap(10)
      .rowsGap(10)
    }
    .padding(15)
  }

  @Builder CreatorsSection() {
    Column() {
      Row() {
        Text('ÁÉ≠Èó®Âàõ‰ΩúËÄÖ')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#FFFFFF')

        Text('Êü•ÁúãÂÖ®ÈÉ®')
          .fontSize(14)
          .fontColor('#FFFFFF')
          .opacity(0.8)
          .onClick(() => {
            router.pushUrl({ url: 'pages/Creators' })
          })
      }
      .onClick(() => {
        router.pushUrl({ url: 'pages/CreateProfile' })
      })
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .margin({ bottom: 15 })

      Scroll() {
        Row({ space: 15 }) {
          ForEach(this.creators, (creator: Creator) => {
            Column({ space: 8 }) {
              Image(creator.avatar)
                .width(60)
                .height(60)
                .borderRadius(30)

              Text(creator.name)
                .fontSize(12)
                .fontColor('#FFFFFF')
                .maxLines(1)
                .textOverflow({ overflow: TextOverflow.Ellipsis })
                .width(70)
                .textAlign(TextAlign.Center)
            }
            .onClick(() => {
              router.pushUrl({ url: 'pages/CreatorProfile',
                params: { id: creator.id }
              })
            })
          })
        }
      }
      .scrollable(ScrollDirection.Horizontal)
    }
    .padding(15)
  }

  @Builder RecommendedSection() {
    Column() {
      Row() {
        Text('‰∏∫‰Ω†Êé®Ëçê')
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#FFFFFF')

        Text('Âà∑Êñ∞')
          .fontSize(14)
          .fontColor('#FFFFFF')
          .opacity(0.8)
          .onClick(() => {
            // Âà∑Êñ∞Êé®ËçêÂÜÖÂÆπ
          })
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .margin({ bottom: 15 })

      List() {
        ForEach(this.recommendedItems, (item: RecommendedItem) => {
          ListItem() {
            Row() {
              Image(item.thumbnail)
                .width(120)
                .height(70)
                .borderRadius(8)
                .objectFit(ImageFit.Cover)

              Column() {
                Text(item.title)
                  .fontSize(14)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#FFFFFF')
                  .maxLines(2)
                  .textOverflow({ overflow: TextOverflow.Ellipsis })
                  .margin({ bottom: 5 })

                Text(item.author + ' ¬∑ ' + item.plays + 'Ê¨°Êí≠Êîæ')
                  .fontSize(12)
                  .fontColor('#FFFFFF')
                  .opacity(0.8)
              }
              .layoutWeight(1)
              .margin({ left: 15 })
              .alignItems(HorizontalAlign.Start)
            }
            .width('100%')
          }
          .margin({ bottom: 15 })
        })
      }
      .width('100%')
    }
    .padding(15)
  }

  build() {
    Stack() {
      Column() {
        // ËÉåÊôØ
        Column()
          .width('100%')
          .height('100%')
          .backgroundColor('#121212')
          .position({ x: 0, y: 0 })

        // ÂÜÖÂÆπ
        Column() {
          this.Header() // È°∂ÈÉ®ÂØºËà™
          this.SearchBar()  // ÊêúÁ¥¢Ê†è
          this.CategoryTabs()

          Scroll() {  // ÊêúÁ¥¢Ê†è
            Column() {
              this.TrendingSection()
              this.CreatorsSection()
              this.RecommendedSection()  // Êé®ËçêÂÜÖÂÆπ
            }
          }
          .scrollable(ScrollDirection.Vertical)
          .scrollBar(BarState.Off)
          .edgeEffect(EdgeEffect.Spring)
          .layoutWeight(1)
        }
        .width('100%')
      }
      .width('100%')
      .height('100%')
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#000000')
  }
}